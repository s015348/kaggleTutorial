# Start with Ubuntu 16.04 64bit
FROM nvidia/cuda:8.0-devel-ubuntu16.04

MAINTAINER Ying <s015348@aliyun.com>


################ Install cudnn6 ################
# ref: https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/8.0/runtime/cudnn6/Dockerfile

RUN echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list

ENV CUDNN_VERSION 6.0.21
LABEL com.nvidia.cudnn.version="${CUDNN_VERSION}"

RUN apt-get update && apt-get install -y --no-install-recommends \
            libcudnn6=$CUDNN_VERSION-1+cuda8.0 && \
    rm -rf /var/lib/apt/lists/*


################ Install Anaconda ################
# Split into 3 layers for avoiding download failure
# Layer ONE
RUN apt-get update && apt-get install -y \
            curl git wget vim \
            bzip2 unzip \
            build-essential \
            gfortran \
            liblapack-dev \
            libopenblas-dev

# Layer TWO
RUN apt-get install -y \
            graphviz \
            libgraphviz-dev \
            pkg-config \
            python-dev \
            python-h5py \
            python-lxml \
            python-nose \
            python-numpy \
            python-pip \
            python-pydot \
            python-scipy \
            python-tk \
            python-yaml \
            python-virtualenv

# Layer THREE
RUN cd / && \
	wget https://repo.continuum.io/archive/Anaconda2-4.4.0-Linux-x86_64.sh && \
	md5sum Anaconda2-4.4.0-Linux-x86_64.sh && \
	bash Anaconda2-4.4.0-Linux-x86_64.sh -b

# Set path in .bashrc
ENV PATH "/root/anaconda2/bin:$PATH"


################ Install Theano and Keras ################
# Install theano
RUN conda install numpy scipy mkl nose sphinx pydot-ng && \
	conda install theano

# Install tensorflow
RUN conda install tensorflow

# Install keras, lasagne and nolearn
RUN pip install --upgrade https://github.com/Lasagne/Lasagne/archive/master.zip && \
    pip install nolearn && \
    conda install keras

# Set backend of keras as theano
RUN mkdir ~/.keras && echo '{\n\
    "image_dim_ordering": "th", \n\
    "epsilon": 1e-07, \n\
    "floatx": "float32", \n\
    "backend": "theano"\n\
}\n'\
> ~/.keras/keras.json

# Config theano using GPU
RUN echo '[global] \n\
floatX = float32 \n\
device = cuda \n\
\n\
[lib] \n\
cnmem = 1 \n\
\n\
[cuda] \n\
root = /usr/local/cuda \n\
\n\
[dnn] \n\
library_path = /usr/local/cuda/lib64 \n\
include_path = /usr/local/cuda/include \n\
\n'\
> ~/.theanorc



# Docker commands
#docker build -t shiying/keras:2.0 -f Dockerfile_keras .
#docker build --no-cache=true -t shiying/keras:2.0 -f Dockerfile_keras .
#docker login --username=shiying
#docker push shiying/keras:2.0
#docker run -it --name=keras shiying/keras:2.0 bash
#docker rm -f $(docker ps -a -q)
#docker rm -f $(docker ps -a | grep none | awk '{print $1 }')
#docker images|grep none|awk '{print $3 }'|xargs docker rmi -f